@using Microsoft.AspNetCore.Identity
@using Odie.Models.Entities

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@model Odie.Models.ViewModels.FilesPageViewModel

@{
    ViewData["Title"] = "Project files";
}

<h2>
    @Html.DisplayFor(modelItem => Model.Project.Name)
    <small>
        @Html.DisplayFor(modelItem => Model.Project.CreatedDate)
        @if (@Model.Project.CreatedByUserID != @UserManager.GetUserId(User)) {
        <span class="label label-warning other" title="This project is owned by another user.">
            @Html.DisplayFor(modelItem => Model.Project.CreatedByUser.Name)
        </span> 
        }
    </small>
    <button class="btn btn-success pull-right" data-toggle="modal" data-target="#newFileModal"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span> New File</button>
</h2>

<p class="sharedWith sharedWith@(@Model.Project.ID)">
    <span class="text-muted">Shared with:</span>
    @if(@Model.Project.SharedWith.Any()) {
        <span class="sharing">
        @Html.Raw(string.Join(", ", @Model.Project.SharedWith.Select(s => s.Name)))
        </span>
    }
    else
    {
        <span class="sharing"><em>None.</em></span>
    }
</p>

@if (@Model.Notice.MessageID != 0) {
    <div class="alert @(@Model.Notice.MessageID > 0 ? "alert-info" : "alert-warning") alert-dismissible fade in" role=alert>
        <button type=button class=close data-dismiss=alert aria-label=Close><span aria-hidden=true>&times;</span></button>
        <strong>
            <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
            <span class="sr-only">Notice:</span>
        </strong>
        @Model.Notice.Message
    </div>
}

<h4>File Listing</h4>

<table id="bs-table" class="table table-hover">
    <thead>
        <tr>
            <th class="text-right" data-sort="int">#</th>
            <th class="col-sm-6 text-left" data-sort="string">Name</th>
            <th class="col-sm-2 text-right" data-sort="int">Created By</th>
            <th class="col-sm-2 text-right" data-sort="int">Created</th>
            <th class="col-sm-2 text-right" data-sort="int">Action</th>
        </tr>
    </thead>
    <tfoot>
        <tr>
            <td colspan="5">
                <small class="pull-left text-muted">Project contains @Model.Project.Files.Count() files.</small>
            </td>
        </tr>
    </tfoot>
    <tbody>
    @{int i = 0;}
    @foreach (var file in Model.Project.Files) {
        i++;
        <tr class="file@(file.ID)@(Model.Notice.NewID == file.ID ? " highlight" : "")">
            <td class="text-muted text-righ">@i</td>
            <td class="text-left">
                <span>@Html.DisplayFor(modelItem => file.Name)</span>
                <button class="editName btn btn-xs" data-pid="@file.ID"><span class="glyphicon glyphicon-pencil
    "></span></button>
                <button class="updateName btn btn-primary btn-xs hidden" data-pid="@file.ID">OK</button>
            </td>
            <td class="text-right">@Html.DisplayFor(modelItem => file.CreatedByUser.Name)</td>
            <td class="text-right">@Html.DisplayFor(modelItem => file.CreatedDate)</td>
            <td class="text-right">
                <a class="btn btn-primary btn-xs" asp-action="Editor" asp-route-id="@file.ID">Edit</a>
                <a class="btn btn-danger btn-xs" asp-action="Delete" asp-route-id="@file.ID">Delete</a>
            </td>
        </tr>
    }
    </tbody>
</table>

<div class="modal fade" id="newFileModal" tabindex="-1" role="dialog" aria-labelledby="newFileModalLabel">
    <form id="createFile" asp-area="" asp-controller="Files" asp-action="Create" asp-route-id="@Model.Project.ID" method="post">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="newFileModalLabel">New File</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group name-row">
                        <label for="name-field" class="control-label">File's Name:</label>
                        <input type="text" class="form-control" name="name" id="name-field" autocomplete="off">
                        <span class="help-block"></span>
                    </div>
                    <div class="checkbox">
                        <label>
                            <input type="checkbox" name="open" checked="checked"> Open newly created file for editing?
                        </label>
                    </div>
                </div>
                <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button type="submit" class="btn btn-primary createFile">Create File</button>
                </div>
            </div>
        </div>
    </form>
</div>

@section scripts
{
    <script>
        $(document).ready(function () {
            /* Remove highlighting and hide alerts shortly after displaying page. */
            setTimeout(function () {
                $('.alert').alert('close');
                $('.highlight').removeClass('highlight');
            }, 3000);

            var timer;

            $('#name-field').on('keyup', function () {
                $('.name-row').removeClass('has-error').removeClass('has-success');
                $('.name-row .help-block').text('');

                clearTimeout(timer);
                timer = setTimeout(function () {
                    $.post("/Files/ValidateName/@Model.Project.ID", {'name': $('#name-field').val()})
                        .done(function (r) {
                            if (r.success != true) {
                                $('.name-row').addClass('has-error');
                                $('.name-row .help-block').text(r.error);
                            } else {
                                $('.name-row').addClass('has-success');
                            }
                    });
                }, 500);
            });

            /* New file button. */
            $(document).on("click", ".createFile", function (e) {
                e.preventDefault();
                $.post("/Files/ValidateName/@Model.Project.ID", {'name': $('#name-field').val()})
                    .done(function (r) {
                        if (r.success == true) {
                            $('#createFile').submit();
                        } else {
                            $('.name-row').addClass('has-error');
                            $('.name-row .help-block').text(r.error);
                        }
                    });
            });

            $(document).on("click", ".editName", function () {
                var pid = $(this).attr('data-pid');
                var p = $('.file' + pid);

                p.find('.editName').addClass('hidden');
                p.find('.updateName').removeClass('hidden');

                var span = p.find('span').first();
                var spanWidth = (Math.max(span.outerWidth(true) + 10), 150) + 'px';
                var input = $('<input />', {
                    'type': 'text',
                    'value': span.text()
                });
                span.replaceWith(input);
                input.outerWidth(spanWidth);
                input.focus().select();
                input.blur(function () {
                    p.find('.updateName').trigger('click');
                });
            });

            $(document).on("click", ".updateName", function () {
                var pid = $(this).attr('data-pid');
                var p = $('.file' + pid);

                var input = p.find('input').first();
                var name = input.val();

                if (name === "") {
                    input.addClass('needsfixin').focus().delay(500).queue(function () {
                        $(this).removeClass("needsfixin").dequeue();
                    });
                    return;
                }

                p.find('.updateName').prop('disabled', true);

                if (name != input.prop("defaultValue")) {
                    $.post("/Files/Rename/" + pid, {'name': name})
                        .done(function (r) {
                            if (r.success == true) {
                                var span = $('<span>' + name + '</span>');
                                input.replaceWith(span);

                                p.find('.updateName').prop('disabled', false).addClass('hidden');
                                p.find('.editName').removeClass('hidden');
                            } else {
                                p.find('.updateName').prop('disabled', false);
                                input.addClass('needsfixin').focus().delay(500).queue(function () {
                                    $(this).removeClass("needsfixin").dequeue();
                                });
                            }
                        });
                }
            });

        });
    </script>
}